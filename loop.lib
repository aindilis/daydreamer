#0Y_ #0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*LOOP-ALIST*|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|CLEAR-LOOP-ALIST|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CLEAR-LOOP-ALIST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CLEAR-LOOP-ALIST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 1. 1.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*| |COMMON-LISP|::|NIL|
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CLEAR-LOOP-ALIST|
       `(|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|*LOOP-ALIST*|
         |COMMON-LISP|::|NIL|))))))
  '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|FETCH-CLAUSES|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|FETCH-CLAUSES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|FETCH-CLAUSES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CLAUSE-KEY|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|FETCH-CLAUSES|
       `(|COMMON-LISP|::|CAR|
         (|COMMON-LISP|::|RASSOC| ',|COMMON-LISP-USER|::|CLAUSE-KEY|
          |COMMON-LISP-USER|::|*LOOP-ALIST*|)))))))
  '(|COMMON-LISP-USER|::|CLAUSE-KEY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|ACONS-SETF|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|ACONS-SETF|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|ACONS-SETF|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Functions like acons accept changes list to the new value."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|KEY|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|DATUM| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP|::|LIST| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ACONS-SETF|
       `(|COMMON-LISP|::|SETF| ,|COMMON-LISP|::|LIST|
         (|COMMON-LISP|::|ACONS| ,|COMMON-LISP-USER|::|KEY|
          ,|COMMON-LISP-USER|::|DATUM| ,|COMMON-LISP|::|LIST|)))))))
  '(|COMMON-LISP-USER|::|KEY| |COMMON-LISP-USER|::|DATUM|
    |COMMON-LISP|::|LIST|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|BEFORE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|BEFORE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|BEFORE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|BODY|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|BEFORE|
      `(|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
        (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|PROGN|
         ',|COMMON-LISP-USER|::|BODY|)
        '|COMMON-LISP-USER|::|BEFORE|)))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|INITIAL|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|INITIAL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|INITIAL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|BODY|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|INITIAL|
      `(|COMMON-LISP|::|DOLIST|
        (|COMMON-LISP-USER|::|CLAUSE| ',|COMMON-LISP-USER|::|BODY|)
        (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
         |COMMON-LISP-USER|::|CLAUSE|
         '|COMMON-LISP-USER|::|INITIALIZATIONS|))))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NEXT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NEXT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NEXT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Next clauses must be of the form (var exp). Eg (next (i (+ i 1)))."
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|CLAUSES|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NEXT|
      `(|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|ASSIGNMENT-LIST| |COMMON-LISP|::|NIL|))
        (|COMMON-LISP|::|DOLIST|
         (|COMMON-LISP-USER|::|CLAUSE| ',|COMMON-LISP-USER|::|CLAUSES|)
         (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|ASSIGNMENT-LIST|
          (|COMMON-LISP|::|CONS|
           (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|SETF|
            |COMMON-LISP-USER|::|CLAUSE|)
           |COMMON-LISP-USER|::|ASSIGNMENT-LIST|)))
        (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
         (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|PROGN|
          |COMMON-LISP-USER|::|ASSIGNMENT-LIST|)
         '|COMMON-LISP-USER|::|NEXT|))))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|CLAUSES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|YRESULT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|YRESULT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|YRESULT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|CLAUSES|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|YRESULT|
      `(|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
        (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|PROGN|
         ',|COMMON-LISP-USER|::|CLAUSES|)
        '|COMMON-LISP-USER|::|RESULT|)))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|CLAUSES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|YDO|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|YDO|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|YDO|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|CLAUSES|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|YDO|
      `(|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
        (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|PROGN|
         ',|COMMON-LISP-USER|::|CLAUSES|)
        '|COMMON-LISP|::|DO|)))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|CLAUSES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|YWHILE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|YWHILE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|YWHILE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|EXPRESSION|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|YWHILE|
       `(|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
         (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|NOT|
          ',|COMMON-LISP-USER|::|EXPRESSION|)
         '|COMMON-LISP-USER|::|END-TEST|))))))
  '(|COMMON-LISP-USER|::|EXPRESSION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|YUNTIL|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|YUNTIL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|YUNTIL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|EXPRESSION|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|YUNTIL|
       `(|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
         ',|COMMON-LISP-USER|::|EXPRESSION|
         '|COMMON-LISP-USER|::|END-TEST|))))))
  '(|COMMON-LISP-USER|::|EXPRESSION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|LERROR|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|LERROR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|LERROR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|FORMAT-STRING|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|FORMAT-ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|LERROR|
       `(|COMMON-LISP|::|ERROR| ,|COMMON-LISP-USER|::|FORMAT-STRING|
         ,@|COMMON-LISP-USER|::|FORMAT-ARGS|))))))
  '(|COMMON-LISP-USER|::|FORMAT-STRING| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|FORMAT-ARGS|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*STEPPING-VARIABLE*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*WHAT-TO-DO*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP-USER|::|*LLIST*|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|YFOR|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|YFOR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|YFOR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|VARIABLE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|WHAT-TO-DO| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|LLIST| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|YFOR|
       (|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|ITERATION-VARIABLE| (|COMMON-LISP|::|GENSYM|))
         (|COMMON-LISP-USER|::|ITERATION-EXPRESSION| (|COMMON-LISP|::|GENSYM|))
         |COMMON-LISP-USER|::|STEPPING-VARIABLE|)
        `(|COMMON-LISP|::|LET|
          ((,|COMMON-LISP-USER|::|ITERATION-VARIABLE| |COMMON-LISP|::|NIL|)
           (,|COMMON-LISP-USER|::|ITERATION-EXPRESSION| |COMMON-LISP|::|NIL|))
          ,(|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
            `(,|COMMON-LISP|::|VARIABLE|
              ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|)
            '|COMMON-LISP-USER|::|ITERATION-VARIABLE|)
          ,(|COMMON-LISP|::|CASE|
            (|COMMON-LISP|::|INTERN|
             (|COMMON-LISP|::|SYMBOL-NAME| |COMMON-LISP-USER|::|WHAT-TO-DO|))
            (|COMMON-LISP-USER|::|IN|
             (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
              `(|COMMON-LISP|::|ENDP|
                ,|COMMON-LISP-USER|::|ITERATION-EXPRESSION|)
              '|COMMON-LISP-USER|::|END-TEST|)
             (|COMMON-LISP-USER|::|ADD-ELEMENTS-TO-CLAUSE|
              '|COMMON-LISP-USER|::|NEXT|
              `(|COMMON-LISP|::|SETF| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                (|COMMON-LISP|::|CAR|
                 ,|COMMON-LISP-USER|::|ITERATION-EXPRESSION|))
              `(|COMMON-LISP|::|SETF|
                ,|COMMON-LISP-USER|::|ITERATION-EXPRESSION|
                (|COMMON-LISP|::|CDR|
                 ,|COMMON-LISP-USER|::|ITERATION-EXPRESSION|)))
             (|COMMON-LISP-USER|::|ADD-ELEMENTS-TO-CLAUSE|
              '|COMMON-LISP-USER|::|INITIALIZATIONS|
              `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                (|COMMON-LISP|::|CAR|
                 ,|COMMON-LISP-USER|::|ITERATION-EXPRESSION|))
              `(,|COMMON-LISP-USER|::|ITERATION-EXPRESSION|
                ,@|COMMON-LISP-USER|::|LLIST|)))
            (|COMMON-LISP-USER|::|ON|
             (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
              |COMMON-LISP-USER|::|ITERATION-EXPRESSION|
              '|COMMON-LISP-USER|::|ITERATION-CONTROL-VARIABLE|)
             (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
              `(|COMMON-LISP|::|ENDP|
                ,|COMMON-LISP-USER|::|ITERATION-EXPRESSION|)
              '|COMMON-LISP-USER|::|END-TEST|)
             (|COMMON-LISP-USER|::|ADD-ELEMENTS-TO-CLAUSE|
              '|COMMON-LISP-USER|::|NEXT|
              `(|COMMON-LISP|::|SETF| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                ,|COMMON-LISP-USER|::|ITERATION-EXPRESSION|)
              `(|COMMON-LISP|::|SETF|
                ,|COMMON-LISP-USER|::|ITERATION-EXPRESSION|
                (|COMMON-LISP|::|CDR|
                 ,|COMMON-LISP-USER|::|ITERATION-EXPRESSION|)))
             (|COMMON-LISP-USER|::|ADD-ELEMENTS-TO-CLAUSE|
              '|COMMON-LISP-USER|::|INITIALIZATIONS|
              `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                (|COMMON-LISP|::|CAR|
                 ,|COMMON-LISP-USER|::|ITERATION-EXPRESSION|))
              `(,|COMMON-LISP-USER|::|ITERATION-EXPRESSION|
                ,@|COMMON-LISP-USER|::|LLIST|)))
            (|COMMON-LISP-USER|::|FROM|
             (|COMMON-LISP|::|IF|
              (|COMMON-LISP|::|NULL|
               (|COMMON-LISP|::|FIFTH| |COMMON-LISP-USER|::|LLIST|))
              (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|STEPPING-VARIABLE|
               1.)
              (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|STEPPING-VARIABLE|
               (|COMMON-LISP|::|FIFTH| |COMMON-LISP-USER|::|LLIST|)))
             (|COMMON-LISP|::|COND|
              ((|COMMON-LISP|::|>|
                (|COMMON-LISP|::|LENGTH| |COMMON-LISP-USER|::|LLIST|) 5.)
               (|COMMON-LISP-USER|::|LERROR|
                "YL:Too many clauses in (yfor ~a ~a ..)"
                |COMMON-LISP|::|VARIABLE| |COMMON-LISP-USER|::|WHAT-TO-DO|))
              ((|COMMON-LISP|::|AND|
                (|COMMON-LISP|::|MINUSP|
                 |COMMON-LISP-USER|::|STEPPING-VARIABLE|)
                (|COMMON-LISP|::|<=|
                 (|COMMON-LISP|::|FIRST| |COMMON-LISP-USER|::|LLIST|)
                 (|COMMON-LISP|::|THIRD| |COMMON-LISP-USER|::|LLIST|)))
               (|COMMON-LISP-USER|::|LERROR|
                "YL:Cannot decrement from ~a to ~a"
                (|COMMON-LISP|::|FIRST| |COMMON-LISP-USER|::|LLIST|)
                (|COMMON-LISP|::|THIRD| |COMMON-LISP-USER|::|LLIST|)))
              (|COMMON-LISP|::|T|
               (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
                `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                  ,(|COMMON-LISP|::|FIRST| |COMMON-LISP-USER|::|LLIST|))
                '|COMMON-LISP-USER|::|INITIALIZATIONS|)
               (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
                `(|COMMON-LISP|::|SETF|
                  ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                  (|COMMON-LISP|::|+| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                   ,|COMMON-LISP-USER|::|STEPPING-VARIABLE|))
                '|COMMON-LISP-USER|::|NEXT|)
               (|COMMON-LISP|::|IF|
                (|COMMON-LISP|::|MINUSP|
                 |COMMON-LISP-USER|::|STEPPING-VARIABLE|)
                (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
                 `(|COMMON-LISP|::|<| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                   ,(|COMMON-LISP|::|THIRD| |COMMON-LISP-USER|::|LLIST|))
                 '|COMMON-LISP-USER|::|END-TEST|)
                (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
                 `(|COMMON-LISP|::|>| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                   ,(|COMMON-LISP|::|THIRD| |COMMON-LISP-USER|::|LLIST|))
                 '|COMMON-LISP-USER|::|END-TEST|))))))))
       |COMMON-LISP|::|T|)))))
  '(|COMMON-LISP|::|VARIABLE| |COMMON-LISP-USER|::|WHAT-TO-DO|
    |COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|LLIST|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|WITH-INCR-OR-DECR-CHECKING|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|WITH-INCR-OR-DECR-CHECKING|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|WITH-INCR-OR-DECR-CHECKING|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Very specialized code to fit in the incr and decr macros."
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|BODY|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|WITH-INCR-OR-DECR-CHECKING|
      `(|COMMON-LISP|::|PROGN|
        (|COMMON-LISP|::|COND|
         ((|COMMON-LISP|::|NULL| |COMMON-LISP-USER|::|ARGS|)
          (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|FINAL|
           |COMMON-LISP|::|T|)
          (|COMMON-LISP|::|SETF| |COMMON-LISP|::|STEP| 1.))
         ((|COMMON-LISP|::|NUMBERP|
           (|COMMON-LISP|::|FIRST| |COMMON-LISP-USER|::|ARGS|))
          (|COMMON-LISP-USER|::|LERROR|
           "Syntax error in incr: expected a yloop keyword after ~a"
           |COMMON-LISP-USER|::|INIT|))
         ((|COMMON-LISP|::|NOT|
           (|COMMON-LISP|::|NUMBERP|
            (|COMMON-LISP|::|SECOND| |COMMON-LISP-USER|::|ARGS|)))
          (|COMMON-LISP-USER|::|LERROR| "Syntax error in incr: ~a not a number"
           (|COMMON-LISP|::|SECOND| |COMMON-LISP-USER|::|ARGS|)))
         (|COMMON-LISP|::|T|
          (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|FINAL|
           (|COMMON-LISP|::|SECOND| |COMMON-LISP-USER|::|ARGS|))
          (|COMMON-LISP|::|IF|
           (|COMMON-LISP|::|NULL|
            (|COMMON-LISP|::|FOURTH| |COMMON-LISP-USER|::|ARGS|))
           (|COMMON-LISP|::|SETF| |COMMON-LISP|::|STEP| 1.)
           (|COMMON-LISP|::|SETF| |COMMON-LISP|::|STEP|
            (|COMMON-LISP|::|FOURTH| |COMMON-LISP-USER|::|ARGS|)))))
        ,@|COMMON-LISP-USER|::|BODY|)))))
  '(|COMMON-LISP|::|&BODY| |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|INCR|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|INCR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|INCR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|VARIABLE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|FROM| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|INIT| (|COMMON-LISP|::|CADDDR| . #1#))
       (|COMMON-LISP-USER|::|ARGS| (|COMMON-LISP|::|CDDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|INCR|
       (|COMMON-LISP|::|LET*|
        (|COMMON-LISP-USER|::|FINAL| |COMMON-LISP|::|STEP|
         (|COMMON-LISP-USER|::|ITERATION-VARIABLE| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|LET|
          ((,|COMMON-LISP-USER|::|ITERATION-VARIABLE| |COMMON-LISP|::|NIL|))
          ,(|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
            `(,|COMMON-LISP|::|VARIABLE|
              ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|)
            '|COMMON-LISP-USER|::|ITERATION-VARIABLE|)
          ,(|COMMON-LISP-USER|::|WITH-INCR-OR-DECR-CHECKING|
            (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
             `(|COMMON-LISP|::|SETF| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
               (|COMMON-LISP|::|+| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                ,|COMMON-LISP|::|STEP|))
             '|COMMON-LISP-USER|::|NEXT|)
            (|COMMON-LISP|::|CASE|
             (|COMMON-LISP|::|INTERN|
              (|COMMON-LISP|::|SYMBOL-NAME| |COMMON-LISP-USER|::|FROM|))
             (|COMMON-LISP-USER|::|.IN.|
              (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
               `(|COMMON-LISP|::|>| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|FINAL|)
               '|COMMON-LISP-USER|::|END-TEST|)
              (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
               `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|INIT|)
               '|COMMON-LISP-USER|::|INITIALIZATIONS|))
             (|COMMON-LISP-USER|::|.IN|
              (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
               `(|COMMON-LISP|::|=| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|FINAL|)
               '|COMMON-LISP-USER|::|END-TEST|)
              (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
               `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|INIT|)
               '|COMMON-LISP-USER|::|INITIALIZATIONS|))
             (|COMMON-LISP-USER|::|IN.|
              (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
               `(|COMMON-LISP|::|>| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|FINAL|)
               '|COMMON-LISP-USER|::|END-TEST|)
              (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
               `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,(|COMMON-LISP|::|1+| |COMMON-LISP-USER|::|INIT|))
               '|COMMON-LISP-USER|::|INITIALIZATIONS|))
             (|COMMON-LISP-USER|::|IN|
              (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
               `(|COMMON-LISP|::|=| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|FINAL|)
               '|COMMON-LISP-USER|::|END-TEST|)
              (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
               `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,(|COMMON-LISP|::|1+| |COMMON-LISP-USER|::|INIT|))
               '|COMMON-LISP-USER|::|INITIALIZATIONS|))
             (|COMMON-LISP|::|OTHERWISE|
              (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
               `(|COMMON-LISP|::|>| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|FINAL|)
               '|COMMON-LISP-USER|::|END-TEST|)
              (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
               `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|INIT|)
               '|COMMON-LISP-USER|::|INITIALIZATIONS|))))))
       |COMMON-LISP|::|T|)))))
  '(|COMMON-LISP|::|VARIABLE| |COMMON-LISP-USER|::|FROM|
    |COMMON-LISP-USER|::|INIT| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|DECR|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|DECR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DECR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|VARIABLE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|FROM| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|INIT| (|COMMON-LISP|::|CADDDR| . #1#))
       (|COMMON-LISP-USER|::|ARGS| (|COMMON-LISP|::|CDDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DECR|
       (|COMMON-LISP|::|LET|
        (|COMMON-LISP-USER|::|FINAL| |COMMON-LISP|::|STEP|
         (|COMMON-LISP-USER|::|ITERATION-VARIABLE| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|LET|
          ((,|COMMON-LISP-USER|::|ITERATION-VARIABLE| |COMMON-LISP|::|NIL|))
          ,(|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
            `(,|COMMON-LISP|::|VARIABLE|
              ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|)
            '|COMMON-LISP-USER|::|ITERATION-VARIABLE|)
          ,(|COMMON-LISP-USER|::|WITH-INCR-OR-DECR-CHECKING|
            (|COMMON-LISP|::|WHEN|
             (|COMMON-LISP|::|<=| |COMMON-LISP-USER|::|INIT|
              |COMMON-LISP-USER|::|FINAL|)
             (|COMMON-LISP-USER|::|LERROR|
              "Cannot decrement from ~a downto ~a. Check the order of your arguments"
              |COMMON-LISP-USER|::|INIT| |COMMON-LISP-USER|::|FINAL|))
            (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
             `(|COMMON-LISP|::|SETF| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
               (|COMMON-LISP|::|-| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                ,|COMMON-LISP|::|STEP|))
             '|COMMON-LISP-USER|::|NEXT|)
            (|COMMON-LISP|::|CASE|
             (|COMMON-LISP|::|INTERN|
              (|COMMON-LISP|::|SYMBOL-NAME| |COMMON-LISP-USER|::|FROM|))
             (|COMMON-LISP-USER|::|.IN.|
              (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
               `(|COMMON-LISP|::|<| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|FINAL|)
               '|COMMON-LISP-USER|::|END-TEST|)
              (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
               `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|INIT|)
               '|COMMON-LISP-USER|::|INITIALIZATIONS|))
             (|COMMON-LISP-USER|::|.IN|
              (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
               `(|COMMON-LISP|::|=| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|FINAL|)
               '|COMMON-LISP-USER|::|END-TEST|)
              (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
               `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|INIT|)
               '|COMMON-LISP-USER|::|INITIALIZATIONS|))
             (|COMMON-LISP-USER|::|IN.|
              (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
               `(|COMMON-LISP|::|<| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|FINAL|)
               '|COMMON-LISP-USER|::|END-TEST|)
              (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
               `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,(|COMMON-LISP|::|1-| |COMMON-LISP-USER|::|INIT|))
               '|COMMON-LISP-USER|::|INITIALIZATIONS|))
             (|COMMON-LISP-USER|::|IN|
              (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
               `(|COMMON-LISP|::|=| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|FINAL|)
               '|COMMON-LISP-USER|::|END-TEST|)
              (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
               `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,(|COMMON-LISP|::|1-| |COMMON-LISP-USER|::|INIT|))
               '|COMMON-LISP-USER|::|INITIALIZATIONS|))
             (|COMMON-LISP|::|OTHERWISE|
              (|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
               `(|COMMON-LISP|::|>| ,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|FINAL|)
               '|COMMON-LISP-USER|::|END-TEST|)
              (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
               `(,|COMMON-LISP-USER|::|ITERATION-VARIABLE|
                 ,|COMMON-LISP-USER|::|INIT|)
               '|COMMON-LISP-USER|::|INITIALIZATIONS|))))))
       |COMMON-LISP|::|T|)))))
  '(|COMMON-LISP|::|VARIABLE| |COMMON-LISP-USER|::|FROM|
    |COMMON-LISP-USER|::|INIT| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|ARGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|AFTER|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|AFTER|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|AFTER|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|CLAUSES|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|AFTER|
      `(|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
        (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|PROGN|
         ',|COMMON-LISP-USER|::|CLAUSES|)
        '|COMMON-LISP-USER|::|AFTER|)))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|CLAUSES|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FETCH-NEW-ITERATION-VARIABLE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FETCH-OLD-ITERATION-VARIABLE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|RECORD-IN-LOOP-ALIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|ELEMENT| |COMMON-LISP-USER|::|KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|ELEMENT| |COMMON-LISP-USER|::|CLAUSE-KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|ADD-ELEMENTS-TO-END-OF-CLAUSE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CLAUSE-KEY| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|ELEMENTS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|ADD-ELEMENTS-TO-CLAUSE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|CLAUSE-KEY| |COMMON-LISP|::|&REST|
    |COMMON-LISP-USER|::|ELEMENTS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SUBSTITUTE-ITERATION-VARIABLE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|LIST|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|ITERATION-VARIABLE-EXISTS-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|YLOOP|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|YLOOP|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|YLOOP|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|CLAUSES|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|YLOOP|
      (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|*LOOP-ALIST*|
       |COMMON-LISP|::|NIL|)
      (|COMMON-LISP|::|MAPCAR| '|COMMON-LISP|::|EVAL|
       |COMMON-LISP-USER|::|CLAUSES|)
      (|COMMON-LISP|::|WHEN|
       (|COMMON-LISP-USER|::|ITERATION-VARIABLE-EXISTS-P|)
       (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|*LOOP-ALIST*|
        (|COMMON-LISP-USER|::|SUBSTITUTE-ITERATION-VARIABLE|
         |COMMON-LISP-USER|::|*LOOP-ALIST*|)))
      (|COMMON-LISP|::|LET|
       ((|COMMON-LISP-USER|::|DOS|
         (|COMMON-LISP-USER|::|FETCH-CLAUSES| |COMMON-LISP|::|DO|))
        (|COMMON-LISP-USER|::|AFTERS|
         (|COMMON-LISP-USER|::|FETCH-CLAUSES| |COMMON-LISP-USER|::|AFTER|))
        (|COMMON-LISP-USER|::|END-TESTS|
         (|COMMON-LISP-USER|::|FETCH-CLAUSES| |COMMON-LISP-USER|::|END-TEST|))
        (|COMMON-LISP-USER|::|BINDINGS|
         (|COMMON-LISP-USER|::|FETCH-CLAUSES|
          |COMMON-LISP-USER|::|INITIALIZATIONS|))
        (|COMMON-LISP-USER|::|RESULT|
         (|COMMON-LISP-USER|::|FETCH-CLAUSES| |COMMON-LISP-USER|::|RESULT|))
        (|COMMON-LISP-USER|::|NEXTS|
         (|COMMON-LISP-USER|::|FETCH-CLAUSES| |COMMON-LISP-USER|::|NEXT|))
        (|COMMON-LISP-USER|::|BEFORES|
         (|COMMON-LISP-USER|::|FETCH-CLAUSES| |COMMON-LISP-USER|::|BEFORE|))
        (|COMMON-LISP-USER|::|MIDDLE-STUFF|
         (|COMMON-LISP-USER|::|FETCH-CLAUSES| |COMMON-LISP-USER|::|MIDDLE|))
        (|COMMON-LISP-USER|::|FRONT-STUFF|
         (|COMMON-LISP-USER|::|FETCH-CLAUSES| |COMMON-LISP-USER|::|FRONT|))
        (|COMMON-LISP-USER|::|END-STUFF|
         (|COMMON-LISP-USER|::|FETCH-CLAUSES| |COMMON-LISP-USER|::|END|))
        (|COMMON-LISP-USER|::|BLOCK-LABEL| (|COMMON-LISP|::|GENSYM|)))
       (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|*LOOP-ALIST*|
        |COMMON-LISP|::|NIL|)
       `(|COMMON-LISP|::|UNWIND-PROTECT|
         (|COMMON-LISP|::|BLOCK| ,|COMMON-LISP-USER|::|BLOCK-LABEL|
          (|COMMON-LISP|::|LET*| (,@|COMMON-LISP-USER|::|BINDINGS|)
           ,@|COMMON-LISP-USER|::|BEFORES| ,@|COMMON-LISP-USER|::|FRONT-STUFF|
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|OR| ,@|COMMON-LISP-USER|::|END-TESTS|)
            (|COMMON-LISP|::|RETURN-FROM| ,|COMMON-LISP-USER|::|BLOCK-LABEL|
             ,@(|COMMON-LISP|::|OR| |COMMON-LISP-USER|::|RESULT|
                '(|COMMON-LISP|::|NIL|))))
           (|COMMON-LISP|::|TAGBODY| |COMMON-LISP|::|LOOP|
            ,@|COMMON-LISP-USER|::|DOS| ,@|COMMON-LISP-USER|::|MIDDLE-STUFF|
            ,@|COMMON-LISP-USER|::|NEXTS|
            (|COMMON-LISP|::|IF|
             (|COMMON-LISP|::|OR| ,@|COMMON-LISP-USER|::|END-TESTS|)
             |COMMON-LISP|::|NIL| (|COMMON-LISP|::|GO| |COMMON-LISP|::|LOOP|)))
           ,@|COMMON-LISP-USER|::|AFTERS| ,@|COMMON-LISP-USER|::|END-STUFF|
           (|COMMON-LISP|::|RETURN-FROM| ,|COMMON-LISP-USER|::|BLOCK-LABEL|
            ,@(|COMMON-LISP|::|OR| |COMMON-LISP-USER|::|RESULT|
               '(|COMMON-LISP|::|NIL|)))))
         ,(|COMMON-LISP-USER|::|CLEAR-LOOP-ALIST|)))))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|CLAUSES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|MAXIMIZE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|MAXIMIZE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|MAXIMIZE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|EXPRESSION|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|MAXIMIZE|
       (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-END-OF-LOOP-ALIST|
        `(|COMMON-LISP-USER|::|MAXIMUM-VARIABLE|
          ,|COMMON-LISP-USER|::|EXPRESSION|)
        '|COMMON-LISP-USER|::|INITIALIZATIONS|)
       (|COMMON-LISP-USER|::|ADD-ELEMENT-TO-LOOP-ALIST|
        `(|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|>| ,|COMMON-LISP-USER|::|EXPRESSION|
           |COMMON-LISP-USER|::|MAXIMUM-VARIABLE|)
          (|COMMON-LISP|::|SETF| |COMMON-LISP-USER|::|MAXIMUM-VARIABLE|
           ,|COMMON-LISP-USER|::|EXPRESSION|))
        '|COMMON-LISP-USER|::|MIDDLE-STUFF|)
       (|COMMON-LISP-USER|::|RESULT| |COMMON-LISP-USER|::|MAXIMUM-VARIABLE|)
       |COMMON-LISP|::|T|)))))
  '(|COMMON-LISP-USER|::|EXPRESSION|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|ADD-ELEMENT-TO-END-OF-LOOP-ALIST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|ELEMENT| |COMMON-LISP-USER|::|CLAUSE-KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|DEFINE-AND-RENAME-LOOP-LOCALS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|WHERE-TO-ADD| |COMMON-LISP-USER|::|ARG-LIST|
    |COMMON-LISP-USER|::|RESULT| |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|ADD-TO-LOOP-MACRO|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|ADD-TO-LOOP-MACRO|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|ADD-TO-LOOP-MACRO|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|WHERE-TO-ADD|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ARG-LIST| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|RESULT| (|COMMON-LISP|::|CADDDR| . #1#))
       (|COMMON-LISP-USER|::|BODY| (|COMMON-LISP|::|CDDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ADD-TO-LOOP-MACRO|
       `(|COMMON-LISP-USER|::|DEFINE-AND-RENAME-LOOP-LOCALS|
         ',|COMMON-LISP-USER|::|WHERE-TO-ADD| ',|COMMON-LISP-USER|::|ARG-LIST|
         ',|COMMON-LISP-USER|::|RESULT| ',@|COMMON-LISP-USER|::|BODY|))))))
  '(|COMMON-LISP-USER|::|WHERE-TO-ADD| |COMMON-LISP-USER|::|ARG-LIST|
    |COMMON-LISP-USER|::|RESULT| |COMMON-LISP|::|&BODY|
    |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|FIND-FORM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|SEQUENCE| |COMMON-LISP-USER|::|FORM-TO-FIND|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|SUBSTITUTE-LOOP-RETURN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|LABEL| |COMMON-LISP-USER|::|LISP-EXPRESSIONS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP-USER|::|LIST-WITHOUT-NILS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP-USER|::|A| |COMMON-LISP-USER|::|B|)))
