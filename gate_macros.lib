#0Y_ #0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|FIXNUM->STRING|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|FIXNUM->STRING|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|FIXNUM->STRING|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|N|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|FIXNUM->STRING|
       `(|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL| "~A"
         ,|COMMON-LISP-USER|::|N|))))))
  '(|COMMON-LISP-USER|::|N|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|DBG|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|DBG|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DBG|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|DBG-VAR|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP|::|REST| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DBG|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|COND|
          ((|COMMON-LISP-USER|::|EQ?| ,|COMMON-LISP-USER|::|DBG-VAR|
            |COMMON-LISP|::|T|)
           (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|T|
            ,@|COMMON-LISP|::|REST|))
          (,|COMMON-LISP-USER|::|DBG-VAR|
           (|COMMON-LISP|::|FORMAT| ,|COMMON-LISP-USER|::|DBG-VAR|
            ,@|COMMON-LISP|::|REST|))
          (|COMMON-LISP-USER|::|ELSE| |COMMON-LISP|::|NIL|))))))))
  '(|COMMON-LISP-USER|::|DBG-VAR| . |COMMON-LISP|::|REST|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|IF-INTERESTED-IN|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|IF-INTERESTED-IN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|IF-INTERESTED-IN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|KEY|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP|::|REST| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|IF-INTERESTED-IN|
       `(|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|AND|
          (|COMMON-LISP-USER|::|ASSQ| ',|COMMON-LISP-USER|::|KEY|
           |COMMON-LISP-USER|::|*NDBG-INTERESTS*|)
          (|COMMON-LISP|::|OR|
           (|COMMON-LISP-USER|::|MEMQ?| '|COMMON-LISP-USER|::|ALL|
            (|COMMON-LISP-USER|::|ASSQ| ',|COMMON-LISP-USER|::|KEY|
             |COMMON-LISP-USER|::|*NDBG-INTERESTS*|))
           (|COMMON-LISP-USER|::|ANY?|
            (|COMMON-LISP|::|LAMBDA| (|COMMON-LISP-USER|::|X|)
             (|COMMON-LISP-USER|::|MEMQ?| |COMMON-LISP-USER|::|X|
              |COMMON-LISP-USER|::|*NDBG-ITEMS*|))
            (|COMMON-LISP|::|CDR|
             (|COMMON-LISP-USER|::|ASSQ| ',|COMMON-LISP-USER|::|KEY|
              |COMMON-LISP-USER|::|*NDBG-INTERESTS*|)))))
         (|COMMON-LISP|::|PROGN| ,@|COMMON-LISP|::|REST|)
         |COMMON-LISP|::|NIL|))))))
  '(|COMMON-LISP-USER|::|KEY| . |COMMON-LISP|::|REST|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NDBG|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NDBG|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NDBG|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|DBG-STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|KEY| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP|::|REST| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NDBG|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|IF|
          (|COMMON-LISP|::|AND|
           (|COMMON-LISP-USER|::|ASSQ| ',|COMMON-LISP-USER|::|KEY|
            |COMMON-LISP-USER|::|*NDBG-INTERESTS*|)
           (|COMMON-LISP|::|OR|
            (|COMMON-LISP-USER|::|MEMQ?| '|COMMON-LISP-USER|::|ALL|
             (|COMMON-LISP-USER|::|ASSQ| ',|COMMON-LISP-USER|::|KEY|
              |COMMON-LISP-USER|::|*NDBG-INTERESTS*|))
            (|COMMON-LISP-USER|::|ANY?|
             (|COMMON-LISP|::|LAMBDA| (|COMMON-LISP-USER|::|X|)
              (|COMMON-LISP-USER|::|MEMQ?| |COMMON-LISP-USER|::|X|
               |COMMON-LISP-USER|::|*NDBG-ITEMS*|))
             (|COMMON-LISP|::|CDR|
              (|COMMON-LISP-USER|::|ASSQ| ',|COMMON-LISP-USER|::|KEY|
               |COMMON-LISP-USER|::|*NDBG-INTERESTS*|)))))
          (|COMMON-LISP|::|COND|
           ((|COMMON-LISP-USER|::|EQ?| ,|COMMON-LISP-USER|::|DBG-STREAM|
             |COMMON-LISP|::|T|)
            (|COMMON-LISP|::|FORMAT| (|COMMON-LISP-USER|::|STANDARD-OUTPUT|)
             ,@|COMMON-LISP|::|REST|)
            |COMMON-LISP|::|T|)
           (,|COMMON-LISP-USER|::|DBG-STREAM|
            (|COMMON-LISP|::|FORMAT| ,|COMMON-LISP-USER|::|DBG-STREAM|
             ,@|COMMON-LISP|::|REST|)
            |COMMON-LISP|::|T|)
           (|COMMON-LISP-USER|::|ELSE| |COMMON-LISP|::|NIL|))
          |COMMON-LISP|::|NIL|)))))))
  '(|COMMON-LISP-USER|::|DBG-STREAM| |COMMON-LISP-USER|::|KEY| .
    |COMMON-LISP|::|REST|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NDBG-IF|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NDBG-IF|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NDBG-IF|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|KEY|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|FORM| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NDBG-IF|
       `(|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|AND|
          (|COMMON-LISP-USER|::|ASSQ| ',|COMMON-LISP-USER|::|KEY|
           |COMMON-LISP-USER|::|*NDBG-INTERESTS*|)
          (|COMMON-LISP|::|OR|
           (|COMMON-LISP-USER|::|MEMQ?| '|COMMON-LISP-USER|::|ALL|
            (|COMMON-LISP-USER|::|ASSQ| ',|COMMON-LISP-USER|::|KEY|
             |COMMON-LISP-USER|::|*NDBG-INTERESTS*|))
           (|COMMON-LISP-USER|::|ANY?|
            (|COMMON-LISP|::|LAMBDA| (|COMMON-LISP-USER|::|X|)
             (|COMMON-LISP-USER|::|MEMQ?| |COMMON-LISP-USER|::|X|
              |COMMON-LISP-USER|::|*NDBG-ITEMS*|))
            (|COMMON-LISP|::|CDR|
             (|COMMON-LISP-USER|::|ASSQ| ',|COMMON-LISP-USER|::|KEY|
              |COMMON-LISP-USER|::|*NDBG-INTERESTS*|)))))
         ,|COMMON-LISP-USER|::|FORM|))))))
  '(|COMMON-LISP-USER|::|KEY| |COMMON-LISP-USER|::|FORM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|LENGTH-ONE?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|LENGTH-ONE?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|LENGTH-ONE?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|X|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|LENGTH-ONE?|
       `(|COMMON-LISP|::|AND| ,|COMMON-LISP-USER|::|X|
         (|COMMON-LISP-USER|::|NULL?|
          (|COMMON-LISP|::|CDR| ,|COMMON-LISP-USER|::|X|))))))))
  '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NIL?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NIL?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NIL?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|X|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NIL?|
       `(|COMMON-LISP|::|OR|
         (|COMMON-LISP-USER|::|NULL?| ,|COMMON-LISP-USER|::|X|)
         (|COMMON-LISP-USER|::|EQ?| ,|COMMON-LISP-USER|::|X|
          '|COMMON-LISP|::|NIL|)))))))
  '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|PC|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|PC|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|PC|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CONTEXT-ABBR|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|PC|
       `(|COMMON-LISP-USER|::|CX$PRINT|
         (|COMMON-LISP|::|EVAL|
          (|COMMON-LISP-USER|::|SYMBOLCONC| '|COMMON-LISP-USER|::|CX.|
           ,|COMMON-LISP-USER|::|CONTEXT-ABBR|))))))))
  '(|COMMON-LISP-USER|::|CONTEXT-ABBR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|PCA|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|PCA|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|PCA|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|CONTEXT-ABBR|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|PCA|
       `(|COMMON-LISP-USER|::|CX$PRINT-ANCESTORS|
         (|COMMON-LISP|::|EVAL|
          (|COMMON-LISP-USER|::|SYMBOLCONC| '|COMMON-LISP-USER|::|CX.|
           ,|COMMON-LISP-USER|::|CONTEXT-ABBR|))))))))
  '(|COMMON-LISP-USER|::|CONTEXT-ABBR|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|MEM-EMPTY-UNIFY|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|MEM-EMPTY-UNIFY|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|MEM-EMPTY-UNIFY|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OBS| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|CONTEXT| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|MEM-EMPTY-UNIFY|
       `(|COMMON-LISP-USER|::|MEM|
         (|COMMON-LISP|::|LAMBDA|
          (|COMMON-LISP-USER|::|X| |COMMON-LISP-USER|::|Y|)
          (|COMMON-LISP-USER|::|BD-AND-EMPTY-BD?|
           (|COMMON-LISP-USER|::|OB$UNIFY-CX| |COMMON-LISP-USER|::|X|
            |COMMON-LISP-USER|::|Y| |COMMON-LISP-USER|::|*EMPTY-BD*|
            ,|COMMON-LISP-USER|::|CONTEXT|)))
         ,|COMMON-LISP-USER|::|OB| ,|COMMON-LISP-USER|::|OBS|))))))
  '(|COMMON-LISP-USER|::|OB| |COMMON-LISP-USER|::|OBS|
    |COMMON-LISP-USER|::|CONTEXT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|MEM-EMPTY-UNIFY?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|MEM-EMPTY-UNIFY?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|MEM-EMPTY-UNIFY?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OBS| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|CONTEXT| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|MEM-EMPTY-UNIFY?|
       `(|COMMON-LISP-USER|::|MEM?|
         (|COMMON-LISP|::|LAMBDA|
          (|COMMON-LISP-USER|::|X| |COMMON-LISP-USER|::|Y|)
          (|COMMON-LISP-USER|::|BD-AND-EMPTY-BD?|
           (|COMMON-LISP-USER|::|OB$UNIFY-CX| |COMMON-LISP-USER|::|X|
            |COMMON-LISP-USER|::|Y| |COMMON-LISP-USER|::|*EMPTY-BD*|
            ,|COMMON-LISP-USER|::|CONTEXT|)))
         ,|COMMON-LISP-USER|::|OB| ,|COMMON-LISP-USER|::|OBS|))))))
  '(|COMMON-LISP-USER|::|OB| |COMMON-LISP-USER|::|OBS|
    |COMMON-LISP-USER|::|CONTEXT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|MEM-UNIFY|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|MEM-UNIFY|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|MEM-UNIFY|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OBS| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|CONTEXT| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|MEM-UNIFY|
       `(|COMMON-LISP-USER|::|MEM|
         (|COMMON-LISP|::|LAMBDA|
          (|COMMON-LISP-USER|::|X| |COMMON-LISP-USER|::|Y|)
          (|COMMON-LISP-USER|::|OB$UNIFY-CX| |COMMON-LISP-USER|::|X|
           |COMMON-LISP-USER|::|Y| |COMMON-LISP-USER|::|*EMPTY-BD*|
           ,|COMMON-LISP-USER|::|CONTEXT|))
         ,|COMMON-LISP-USER|::|OB| ,|COMMON-LISP-USER|::|OBS|))))))
  '(|COMMON-LISP-USER|::|OB| |COMMON-LISP-USER|::|OBS|
    |COMMON-LISP-USER|::|CONTEXT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|MEM-UNIFY?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|MEM-UNIFY?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|MEM-UNIFY?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OBS| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|CONTEXT| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|MEM-UNIFY?|
       `(|COMMON-LISP-USER|::|MEM?|
         (|COMMON-LISP|::|LAMBDA|
          (|COMMON-LISP-USER|::|X| |COMMON-LISP-USER|::|Y|)
          (|COMMON-LISP-USER|::|OB$UNIFY-CX| |COMMON-LISP-USER|::|X|
           |COMMON-LISP-USER|::|Y| |COMMON-LISP-USER|::|*EMPTY-BD*|
           ,|COMMON-LISP-USER|::|CONTEXT|))
         ,|COMMON-LISP-USER|::|OB| ,|COMMON-LISP-USER|::|OBS|))))))
  '(|COMMON-LISP-USER|::|OB| |COMMON-LISP-USER|::|OBS|
    |COMMON-LISP-USER|::|CONTEXT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|DEL-UNIFY!|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|DEL-UNIFY!|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|DEL-UNIFY!|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OBS| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|CONTEXT| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|DEL-UNIFY!|
       `(|COMMON-LISP-USER|::|DEL!|
         (|COMMON-LISP|::|LAMBDA|
          (|COMMON-LISP-USER|::|X| |COMMON-LISP-USER|::|Y|)
          (|COMMON-LISP-USER|::|OB$UNIFY-CX| |COMMON-LISP-USER|::|X|
           |COMMON-LISP-USER|::|Y| |COMMON-LISP-USER|::|*EMPTY-BD*|
           ,|COMMON-LISP-USER|::|CONTEXT|))
         ,|COMMON-LISP-USER|::|OB| ,|COMMON-LISP-USER|::|OBS|))))))
  '(|COMMON-LISP-USER|::|OB| |COMMON-LISP-USER|::|OBS|
    |COMMON-LISP-USER|::|CONTEXT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|RETRIEVE-BD->OB|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|RETRIEVE-BD->OB|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|RETRIEVE-BD->OB|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|BD|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|RETRIEVE-BD->OB|
       `(|COMMON-LISP|::|MAP| '|COMMON-LISP|::|LIST|
         (|COMMON-LISP|::|LAMBDA| (|COMMON-LISP-USER|::|X|)
          (|COMMON-LISP|::|CAR| |COMMON-LISP-USER|::|X|))
         ,|COMMON-LISP-USER|::|BD|))))))
  '(|COMMON-LISP-USER|::|BD|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|CX?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CX?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CX?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|X|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CX?|
       `(|COMMON-LISP|::|AND|
         (|COMMON-LISP-USER|::|OB?| ,|COMMON-LISP-USER|::|X|)
         (|COMMON-LISP-USER|::|EQ?|
          (|COMMON-LISP-USER|::|OB$TY| ,|COMMON-LISP-USER|::|X|)
          |COMMON-LISP-USER|::|*CX-OB*|)))))))
  '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|TOUCHABLE-FACT?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|TOUCHABLE-FACT?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|TOUCHABLE-FACT?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|FACT|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|TOUCHABLE-FACT?|
       `(|COMMON-LISP|::|NOT|
         (|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|FACT|
          '|COMMON-LISP-USER|::|CAUSAL-LINK|)))))))
  '(|COMMON-LISP-USER|::|FACT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$INSTANTIATE2|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$INSTANTIATE2|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$INSTANTIATE2|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 9. 9.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|TEMPLATE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|BINDINGS| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|DEPTH| (|COMMON-LISP|::|CADDDR| . #1#))
       (|COMMON-LISP-USER|::|OMIT-SLOTS| (|COMMON-LISP|::|FIFTH| . #1#))
       (|COMMON-LISP-USER|::|INCLUDE-SLOTS|
        (|COMMON-LISP|::|CADR| . #2=((|COMMON-LISP|::|CDDDDR| . #1#))))
       (|COMMON-LISP-USER|::|SUBSTIT| (|COMMON-LISP|::|CADDR| . #2#))
       (|COMMON-LISP-USER|::|ABSTRACT| (|COMMON-LISP|::|CADDDR| . #2#))
       (|COMMON-LISP-USER|::|OMIT-PROC| (|COMMON-LISP|::|FIFTH| . #2#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$INSTANTIATE2|
       `(|COMMON-LISP|::|IF| |COMMON-LISP-USER|::|*UNIFY-DEBUGGING?*|
         (|COMMON-LISP-USER|::|OB$INSTANTIATE-DBG|
          ,|COMMON-LISP-USER|::|TEMPLATE| ,|COMMON-LISP-USER|::|BINDINGS|
          ,|COMMON-LISP-USER|::|DEPTH| ,|COMMON-LISP-USER|::|OMIT-SLOTS|
          ,|COMMON-LISP-USER|::|INCLUDE-SLOTS| ,|COMMON-LISP-USER|::|SUBSTIT|
          ,|COMMON-LISP-USER|::|ABSTRACT| ,|COMMON-LISP-USER|::|OMIT-PROC|)
         (|COMMON-LISP-USER|::|OB$INSTANTIATE3| ,|COMMON-LISP-USER|::|TEMPLATE|
          ,|COMMON-LISP-USER|::|BINDINGS| ,|COMMON-LISP-USER|::|DEPTH|
          ,|COMMON-LISP-USER|::|OMIT-SLOTS|
          ,|COMMON-LISP-USER|::|INCLUDE-SLOTS| ,|COMMON-LISP-USER|::|SUBSTIT|
          ,|COMMON-LISP-USER|::|ABSTRACT|
          ,|COMMON-LISP-USER|::|OMIT-PROC|)))))))
  '(|COMMON-LISP-USER|::|TEMPLATE| |COMMON-LISP-USER|::|BINDINGS|
    |COMMON-LISP-USER|::|DEPTH| |COMMON-LISP-USER|::|OMIT-SLOTS|
    |COMMON-LISP-USER|::|INCLUDE-SLOTS| |COMMON-LISP-USER|::|SUBSTIT|
    |COMMON-LISP-USER|::|ABSTRACT| |COMMON-LISP-USER|::|OMIT-PROC|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OBJ|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB?|
       `(|COMMON-LISP|::|TYPEP| ,|COMMON-LISP-USER|::|OBJ|
         '|COMMON-LISP-USER|::|OBR|))))))
  '(|COMMON-LISP-USER|::|OBJ|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|ENFORCE-OB|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|ENFORCE-OB|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|ENFORCE-OB|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OBJ|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|ROUTINE| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|ENFORCE-OB|
       `(|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|COMMON-LISP-USER|::|OB?| ,|COMMON-LISP-USER|::|OBJ|))
         (|COMMON-LISP|::|SETQ| ,|COMMON-LISP-USER|::|OBJ|
          (|COMMON-LISP|::|ERROR| "~A: ~A not ob"
           ,|COMMON-LISP-USER|::|ROUTINE| ,|COMMON-LISP-USER|::|OBJ|))))))))
  '(|COMMON-LISP-USER|::|OBJ| |COMMON-LISP-USER|::|ROUTINE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$TY|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$TY|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$TY|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$TY|
       `(|COMMON-LISP-USER|::|OB$GET| ,|COMMON-LISP-USER|::|OB|
         '|COMMON-LISP|::|TYPE|))))))
  '(|COMMON-LISP-USER|::|OB|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|TY?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|TY?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|TY?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|X|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|TY?|
       `(|COMMON-LISP|::|AND|
         (|COMMON-LISP-USER|::|OB?| ,|COMMON-LISP-USER|::|X|)
         (|COMMON-LISP-USER|::|EQ?|
          (|COMMON-LISP-USER|::|OB$TY| ,|COMMON-LISP-USER|::|X|)
          |COMMON-LISP-USER|::|*TY-OB*|)))))))
  '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|PATH->SLOT-NAME|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|PATH->SLOT-NAME|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|PATH->SLOT-NAME|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|PATH|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|PATH->SLOT-NAME|
       `(|COMMON-LISP-USER|::|TLAST| ,|COMMON-LISP-USER|::|PATH|))))))
  '(|COMMON-LISP-USER|::|PATH|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|VAR?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|VAR?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|VAR?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|X|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|VAR?|
       `(|COMMON-LISP|::|AND|
         (|COMMON-LISP-USER|::|OB?| ,|COMMON-LISP-USER|::|X|)
         (|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|X|
          '|COMMON-LISP-USER|::|UVAR|)))))))
  '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|SPECIAL?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|SPECIAL?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|SPECIAL?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|X|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|SPECIAL?|
       `(|COMMON-LISP|::|AND|
         (|COMMON-LISP-USER|::|OB?| ,|COMMON-LISP-USER|::|X|)
         (|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|X|
          '|COMMON-LISP-USER|::|USPECIAL|)))))))
  '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|CAR-EQ?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|CAR-EQ?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|CAR-EQ?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|X|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|Y| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|CAR-EQ?|
       `(|COMMON-LISP|::|AND|
         (|COMMON-LISP-USER|::|PAIR?| ,|COMMON-LISP-USER|::|X|)
         (|COMMON-LISP-USER|::|EQ?|
          (|COMMON-LISP|::|CAR| ,|COMMON-LISP-USER|::|X|)
          ,|COMMON-LISP-USER|::|Y|)))))))
  '(|COMMON-LISP-USER|::|X| |COMMON-LISP-USER|::|Y|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|VARIABLE-NAME|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|VARIABLE-NAME|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|VARIABLE-NAME|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|X|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|VARIABLE-NAME|
       `(|COMMON-LISP-USER|::|OB$GET| ,|COMMON-LISP-USER|::|X|
         '|COMMON-LISP-USER|::|NAME|))))))
  '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|VARIABLE-TYPE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|VARIABLE-TYPE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|VARIABLE-TYPE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|X|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|VARIABLE-TYPE|
       `(|COMMON-LISP-USER|::|OB$GET| ,|COMMON-LISP-USER|::|X|
         '|COMMON-LISP-USER|::|UNIFIES-WITH|))))))
  '(|COMMON-LISP-USER|::|X|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|SET-OBR-OBNAMES|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|SET-OBR-OBNAMES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|SET-OBR-OBNAMES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|VAL| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|SET-OBR-OBNAMES|
       `(|COMMON-LISP|::|SETF|
         (|COMMON-LISP-USER|::|OBR-OBNAMES| ,|COMMON-LISP-USER|::|OB|)
         ,|COMMON-LISP-USER|::|VAL|))))))
  '(|COMMON-LISP-USER|::|OB| |COMMON-LISP-USER|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|SET-OBR-SLOTS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|SET-OBR-SLOTS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|SET-OBR-SLOTS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|VAL| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|SET-OBR-SLOTS|
       `(|COMMON-LISP|::|SETF|
         (|COMMON-LISP-USER|::|OBR-SLOTS| ,|COMMON-LISP-USER|::|OB|)
         ,|COMMON-LISP-USER|::|VAL|))))))
  '(|COMMON-LISP-USER|::|OB| |COMMON-LISP-USER|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|SET-OBR-LITERAL|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|SET-OBR-LITERAL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|SET-OBR-LITERAL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|VAL| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|SET-OBR-LITERAL|
       `(|COMMON-LISP|::|SETF|
         (|COMMON-LISP-USER|::|OBR-LITERAL| ,|COMMON-LISP-USER|::|OB|)
         ,|COMMON-LISP-USER|::|VAL|))))))
  '(|COMMON-LISP-USER|::|OB| |COMMON-LISP-USER|::|VAL|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|SLOTS-NAME|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|SLOTS-NAME|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|SLOTS-NAME|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|SLOTS|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|SLOTS-NAME|
       `(|COMMON-LISP|::|CAR| ,|COMMON-LISP-USER|::|SLOTS|))))))
  '(|COMMON-LISP-USER|::|SLOTS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|SLOTS-VALUE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|SLOTS-VALUE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|SLOTS-VALUE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|SLOTS|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|SLOTS-VALUE|
       `(|COMMON-LISP|::|CADR| ,|COMMON-LISP-USER|::|SLOTS|))))))
  '(|COMMON-LISP-USER|::|SLOTS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|WITH-UNHIDDEN-DEFAULT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|WITH-UNHIDDEN-DEFAULT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|WITH-UNHIDDEN-DEFAULT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|BODY|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|WITH-UNHIDDEN-DEFAULT|
      `(|COMMON-LISP|::|UNWIND-PROTECT|
        (|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|*HIDDEN-DEFAULT*|
          |COMMON-LISP|::|NIL|)
         ,@|COMMON-LISP-USER|::|BODY|)
        (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|*HIDDEN-DEFAULT*|
         |COMMON-LISP|::|T|))))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$CREATE-EMPTY|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$CREATE-EMPTY|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$CREATE-EMPTY|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 1. 1.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*| |COMMON-LISP|::|NIL|
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$CREATE-EMPTY|
       '(|COMMON-LISP-USER|::|OB$CREATE-NAMED-EMPTY| |COMMON-LISP|::|NIL|))))))
  '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NDBG-NEWLINE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NDBG-NEWLINE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NDBG-NEWLINE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|KEY| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NDBG-NEWLINE|
       `(|COMMON-LISP-USER|::|IF-INTERESTED-IN| ,|COMMON-LISP-USER|::|KEY|
         (|COMMON-LISP-USER|::|DO-NEWLINE| ,|COMMON-LISP|::|STREAM|)))))))
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP-USER|::|KEY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|NDBG-LARGE-ROMAN-FONT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NDBG-LARGE-ROMAN-FONT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NDBG-LARGE-ROMAN-FONT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|KEY| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NDBG-LARGE-ROMAN-FONT|
       `(|COMMON-LISP-USER|::|IF-INTERESTED-IN| ,|COMMON-LISP-USER|::|KEY|
         (|COMMON-LISP-USER|::|BEGIN-LARGE-ROMAN-FONT|
          ,|COMMON-LISP|::|STREAM|)))))))
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP-USER|::|KEY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|NDBG-LARGE-BOLD-FONT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NDBG-LARGE-BOLD-FONT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NDBG-LARGE-BOLD-FONT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|KEY| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NDBG-LARGE-BOLD-FONT|
       `(|COMMON-LISP-USER|::|IF-INTERESTED-IN| ,|COMMON-LISP-USER|::|KEY|
         (|COMMON-LISP-USER|::|BEGIN-LARGE-BOLD-FONT|
          ,|COMMON-LISP|::|STREAM|)))))))
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP-USER|::|KEY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NDBG-ROMAN-FONT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NDBG-ROMAN-FONT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NDBG-ROMAN-FONT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|KEY| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NDBG-ROMAN-FONT|
       `(|COMMON-LISP-USER|::|IF-INTERESTED-IN| ,|COMMON-LISP-USER|::|KEY|
         (|COMMON-LISP-USER|::|BEGIN-ROMAN-FONT|
          ,|COMMON-LISP|::|STREAM|)))))))
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP-USER|::|KEY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NDBG-BOLD-FONT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NDBG-BOLD-FONT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NDBG-BOLD-FONT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|KEY| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NDBG-BOLD-FONT|
       `(|COMMON-LISP-USER|::|IF-INTERESTED-IN| ,|COMMON-LISP-USER|::|KEY|
         (|COMMON-LISP-USER|::|BEGIN-BOLD-FONT| ,|COMMON-LISP|::|STREAM|)))))))
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP-USER|::|KEY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NDBG-ITALIC-FONT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NDBG-ITALIC-FONT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NDBG-ITALIC-FONT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|KEY| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NDBG-ITALIC-FONT|
       `(|COMMON-LISP-USER|::|IF-INTERESTED-IN| ,|COMMON-LISP-USER|::|KEY|
         (|COMMON-LISP-USER|::|BEGIN-ITALIC-FONT|
          ,|COMMON-LISP|::|STREAM|)))))))
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP-USER|::|KEY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NDBG-SLANTED-FONT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NDBG-SLANTED-FONT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NDBG-SLANTED-FONT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|KEY| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NDBG-SLANTED-FONT|
       `(|COMMON-LISP-USER|::|IF-INTERESTED-IN| ,|COMMON-LISP-USER|::|KEY|
         (|COMMON-LISP-USER|::|BEGIN-SLANTED-FONT|
          ,|COMMON-LISP|::|STREAM|)))))))
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP-USER|::|KEY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NDBG-END-FONT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NDBG-END-FONT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NDBG-END-FONT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|KEY| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NDBG-END-FONT|
       `(|COMMON-LISP-USER|::|IF-INTERESTED-IN| ,|COMMON-LISP-USER|::|KEY|
         (|COMMON-LISP-USER|::|END-FONT| ,|COMMON-LISP|::|STREAM|)))))))
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP-USER|::|KEY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NDBG-ROMAN|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NDBG-ROMAN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NDBG-ROMAN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|KEY| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP|::|REST| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NDBG-ROMAN|
       `(|COMMON-LISP-USER|::|IF-INTERESTED-IN| ,|COMMON-LISP-USER|::|KEY|
         (|COMMON-LISP-USER|::|BEGIN-ROMAN-FONT| ,|COMMON-LISP|::|STREAM|)
         (|COMMON-LISP-USER|::|NDBG| ,|COMMON-LISP|::|STREAM|
          ,|COMMON-LISP-USER|::|KEY| ,@|COMMON-LISP|::|REST|)
         (|COMMON-LISP-USER|::|END-FONT| ,|COMMON-LISP|::|STREAM|)))))))
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP-USER|::|KEY| .
    |COMMON-LISP|::|REST|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|NDBG-ROMAN-NL|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|NDBG-ROMAN-NL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|NDBG-ROMAN-NL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|STREAM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|KEY| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP|::|REST| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|NDBG-ROMAN-NL|
       `(|COMMON-LISP-USER|::|IF-INTERESTED-IN| ,|COMMON-LISP-USER|::|KEY|
         (|COMMON-LISP-USER|::|BEGIN-ROMAN-FONT| ,|COMMON-LISP|::|STREAM|)
         (|COMMON-LISP-USER|::|NDBG| ,|COMMON-LISP|::|STREAM|
          ,|COMMON-LISP-USER|::|KEY| ,@|COMMON-LISP|::|REST|)
         (|COMMON-LISP-USER|::|END-FONT| ,|COMMON-LISP|::|STREAM|)
         (|COMMON-LISP-USER|::|DO-NEWLINE| ,|COMMON-LISP|::|STREAM|)))))))
  '(|COMMON-LISP|::|STREAM| |COMMON-LISP-USER|::|KEY| .
    |COMMON-LISP|::|REST|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$CREATE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$CREATE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$CREATE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|SPEC|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$CREATE|
       `(|COMMON-LISP-USER|::|OB$READLIST| ,|COMMON-LISP-USER|::|SPEC|))))))
  '(|COMMON-LISP-USER|::|SPEC|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$FCREATE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$FCREATE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$FCREATE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|SPEC|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$FCREATE|
       `(|COMMON-LISP-USER|::|OB$FREADLIST| ,|COMMON-LISP-USER|::|SPEC|))))))
  '(|COMMON-LISP-USER|::|SPEC|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|SPECIAL-PRIORITY?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|SPECIAL-PRIORITY?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|SPECIAL-PRIORITY?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OB2| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|SPECIAL-PRIORITY?|
       `(|COMMON-LISP|::|COND|
         ((|COMMON-LISP|::|NOT|
           (|COMMON-LISP-USER|::|SPECIAL?| ,|COMMON-LISP-USER|::|OB1|))
          |COMMON-LISP|::|NIL|)
         ((|COMMON-LISP|::|NOT|
           (|COMMON-LISP-USER|::|SPECIAL?| ,|COMMON-LISP-USER|::|OB2|))
          |COMMON-LISP|::|T|)
         ((|COMMON-LISP-USER|::|EQ?|
           (|COMMON-LISP-USER|::|OB$TY| ,|COMMON-LISP-USER|::|OB1|)
           (|COMMON-LISP-USER|::|OB$TY| ,|COMMON-LISP-USER|::|OB2|))
          |COMMON-LISP|::|T|)
         (|COMMON-LISP-USER|::|ELSE|
          (|COMMON-LISP-USER|::|MEMQ?| ,|COMMON-LISP-USER|::|OB2|
           (|COMMON-LISP-USER|::|MEMQ| ,|COMMON-LISP-USER|::|OB1|
            |COMMON-LISP-USER|::|*SPECIAL-PRIORITIES*|)))))))))
  '(|COMMON-LISP-USER|::|OB1| |COMMON-LISP-USER|::|OB2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|OLD-SPECIAL-PRIORITY?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OLD-SPECIAL-PRIORITY?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OLD-SPECIAL-PRIORITY?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OB2| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OLD-SPECIAL-PRIORITY?|
       `(|COMMON-LISP|::|COND|
         ((|COMMON-LISP|::|NOT|
           (|COMMON-LISP-USER|::|SPECIAL?| ,|COMMON-LISP-USER|::|OB1|))
          |COMMON-LISP|::|NIL|)
         ((|COMMON-LISP|::|NOT|
           (|COMMON-LISP-USER|::|SPECIAL?| ,|COMMON-LISP-USER|::|OB2|))
          |COMMON-LISP|::|T|)
         ((|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|OB1|
           '|COMMON-LISP-USER|::|UOR|)
          |COMMON-LISP|::|T|)
         ((|COMMON-LISP|::|AND|
           (|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|OB1|
            '|COMMON-LISP-USER|::|UAND|)
           (|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|OB2|
            '|COMMON-LISP-USER|::|UOR|))
          |COMMON-LISP|::|NIL|)
         ((|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|OB1|
           '|COMMON-LISP-USER|::|UAND|)
          |COMMON-LISP|::|T|)
         ((|COMMON-LISP|::|AND|
           (|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|OB1|
            '|COMMON-LISP-USER|::|UNOT|)
           (|COMMON-LISP|::|OR|
            (|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|OB2|
             '|COMMON-LISP-USER|::|UOR|)
            (|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|OB2|
             '|COMMON-LISP-USER|::|UAND|)))
          |COMMON-LISP|::|NIL|)
         ((|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|OB1|
           '|COMMON-LISP-USER|::|UNOT|)
          |COMMON-LISP|::|T|)
         ((|COMMON-LISP|::|AND|
           (|COMMON-LISP-USER|::|TY?INSTANCE?| ,|COMMON-LISP-USER|::|OB1|
            '|COMMON-LISP-USER|::|UPROC|)
           (|COMMON-LISP|::|OR|
            (|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|OB2|
             '|COMMON-LISP-USER|::|UOR|)
            (|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|OB2|
             '|COMMON-LISP-USER|::|UAND|)
            (|COMMON-LISP-USER|::|TY$INSTANCE?| ,|COMMON-LISP-USER|::|OB2|
             '|COMMON-LISP-USER|::|UNOT|)))
          |COMMON-LISP|::|NIL|)
         (|COMMON-LISP-USER|::|ELSE| |COMMON-LISP|::|T|)))))))
  '(|COMMON-LISP-USER|::|OB1| |COMMON-LISP-USER|::|OB2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|VAR-TY$INSTANCE?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|VAR-TY$INSTANCE?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|VAR-TY$INSTANCE?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|X|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|Y| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|VAR-TY$INSTANCE?|
       `(|COMMON-LISP|::|IF|
         (|COMMON-LISP-USER|::|NULL?| ,|COMMON-LISP-USER|::|Y|)
         |COMMON-LISP|::|T|
         (|COMMON-LISP|::|AND|
          (|COMMON-LISP-USER|::|OB?| ,|COMMON-LISP-USER|::|X|)
          (|COMMON-LISP-USER|::|TY$INSTANCE-OF?| ,|COMMON-LISP-USER|::|X|
           ,|COMMON-LISP-USER|::|Y|))))))))
  '(|COMMON-LISP-USER|::|X| |COMMON-LISP-USER|::|Y|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|TYPE-COMPATIBLE-VARS?|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|TYPE-COMPATIBLE-VARS?|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|TYPE-COMPATIBLE-VARS?|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|VAR1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|VAR2| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|TYPE-COMPATIBLE-VARS?|
       `(|COMMON-LISP|::|OR| |COMMON-LISP-USER|::|*RELAX-UNIFY-VAR*|
         (|COMMON-LISP-USER|::|NULL?|
          (|COMMON-LISP-USER|::|VARIABLE-TYPE| ,|COMMON-LISP-USER|::|VAR1|))
         (|COMMON-LISP-USER|::|NULL?|
          (|COMMON-LISP-USER|::|VARIABLE-TYPE| ,|COMMON-LISP-USER|::|VAR2|))
         (|COMMON-LISP-USER|::|MEMQ?|
          (|COMMON-LISP-USER|::|VARIABLE-TYPE| ,|COMMON-LISP-USER|::|VAR1|)
          (|COMMON-LISP-USER|::|TY$SUPERTYPES*|
           (|COMMON-LISP-USER|::|VARIABLE-TYPE| ,|COMMON-LISP-USER|::|VAR2|)))
         (|COMMON-LISP-USER|::|MEMQ?|
          (|COMMON-LISP-USER|::|VARIABLE-TYPE| ,|COMMON-LISP-USER|::|VAR2|)
          (|COMMON-LISP-USER|::|TY$SUPERTYPES*|
           (|COMMON-LISP-USER|::|VARIABLE-TYPE|
            ,|COMMON-LISP-USER|::|VAR1|)))))))))
  '(|COMMON-LISP-USER|::|VAR1| |COMMON-LISP-USER|::|VAR2|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|COMMON-LISP-USER|::|WITH-INVERSE-SETTING-DEFAULT-OFF|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|WITH-INVERSE-SETTING-DEFAULT-OFF|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION|
   |COMMON-LISP-USER|::|WITH-INVERSE-SETTING-DEFAULT-OFF|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|LET*|
     ((|COMMON-LISP-USER|::|BODY|
       (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
     (|COMMON-LISP|::|BLOCK|
      |COMMON-LISP-USER|::|WITH-INVERSE-SETTING-DEFAULT-OFF|
      `(|COMMON-LISP|::|LET|
        ((|COMMON-LISP-USER|::|RESULT| |COMMON-LISP|::|NIL|))
        (|COMMON-LISP-USER|::|INVERSE-SETTING-DEFAULT-OFF|)
        (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|RESULT|
         (|COMMON-LISP|::|PROGN| ,@|COMMON-LISP-USER|::|BODY|))
        (|COMMON-LISP-USER|::|INVERSE-SETTING-DEFAULT-ON|)
        |COMMON-LISP-USER|::|RESULT|)))))
  '(|COMMON-LISP|::|&REST| |COMMON-LISP-USER|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|BD-BIND|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|BD-BIND|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|BD-BIND|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|VAR|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|VALUE| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|BINDINGS| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|BD-BIND|
       `(|COMMON-LISP|::|IF| ,|COMMON-LISP-USER|::|VAR|
         (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|T|
          (|COMMON-LISP|::|CONS|
           (|COMMON-LISP|::|LIST| ,|COMMON-LISP-USER|::|VAR|
            ,|COMMON-LISP-USER|::|VALUE|)
           (|COMMON-LISP|::|CDR| ,|COMMON-LISP-USER|::|BINDINGS|)))
         ,|COMMON-LISP-USER|::|BINDINGS|))))))
  '(|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|VALUE|
    |COMMON-LISP-USER|::|BINDINGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|BD-BIND!|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|BD-BIND!|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|BD-BIND!|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|VAR|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|VALUE| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|BINDINGS| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|BD-BIND!|
       `(|COMMON-LISP|::|SETF|
         (|COMMON-LISP|::|CDR| ,|COMMON-LISP-USER|::|BINDINGS|)
         (|COMMON-LISP|::|CONS|
          (|COMMON-LISP|::|LIST| ,|COMMON-LISP-USER|::|VAR|
           ,|COMMON-LISP-USER|::|VALUE|)
          (|COMMON-LISP|::|CDR| ,|COMMON-LISP-USER|::|BINDINGS|))))))))
  '(|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|VALUE|
    |COMMON-LISP-USER|::|BINDINGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|BD-LOOKUP|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|BD-LOOKUP|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|BD-LOOKUP|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|VAR|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|BINDINGS| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|BD-LOOKUP|
       `(|COMMON-LISP|::|AND| ,|COMMON-LISP-USER|::|BINDINGS|
         (|COMMON-LISP|::|LET|
          ((|COMMON-LISP-USER|::|FOUND|
            (|COMMON-LISP-USER|::|ASSQ| ,|COMMON-LISP-USER|::|VAR|
             (|COMMON-LISP|::|CDR| ,|COMMON-LISP-USER|::|BINDINGS|))))
          (|COMMON-LISP|::|IF| |COMMON-LISP-USER|::|FOUND|
           (|COMMON-LISP|::|CADR| |COMMON-LISP-USER|::|FOUND|)
           |COMMON-LISP|::|NIL|))))))))
  '(|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|BINDINGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|BD-HYPER-LOOKUP|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|BD-HYPER-LOOKUP|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|BD-HYPER-LOOKUP|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|VAR|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|BD| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|BD-HYPER-LOOKUP|
       `(|COMMON-LISP-USER|::|BD-HYPER-LOOKUP1| ,|COMMON-LISP-USER|::|VAR|
         ,|COMMON-LISP-USER|::|BD| |COMMON-LISP|::|NIL|
         |COMMON-LISP|::|NIL|))))))
  '(|COMMON-LISP-USER|::|VAR| |COMMON-LISP-USER|::|BD|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$UNIFY2|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$UNIFY2|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$UNIFY2|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OB2| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|BINDINGS| (|COMMON-LISP|::|CADDDR| . #1#))
       (|COMMON-LISP-USER|::|IGNORE-SLOTS| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$UNIFY2|
       `(|COMMON-LISP|::|IF| |COMMON-LISP-USER|::|*UNIFY-DEBUGGING?*|
         (|COMMON-LISP-USER|::|OB$UNIFY-DBG| ,|COMMON-LISP-USER|::|OB1|
          ,|COMMON-LISP-USER|::|OB2| ,|COMMON-LISP-USER|::|BINDINGS|
          ,|COMMON-LISP-USER|::|IGNORE-SLOTS|)
         (|COMMON-LISP-USER|::|OB$UNIFY0| ,|COMMON-LISP-USER|::|OB1|
          ,|COMMON-LISP-USER|::|OB2| ,|COMMON-LISP-USER|::|BINDINGS|
          ,|COMMON-LISP-USER|::|IGNORE-SLOTS|)))))))
  '(|COMMON-LISP-USER|::|OB1| |COMMON-LISP-USER|::|OB2|
    |COMMON-LISP-USER|::|BINDINGS| |COMMON-LISP-USER|::|IGNORE-SLOTS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$UNIFY1|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$UNIFY1|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$UNIFY1|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OB2| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|BINDINGS| (|COMMON-LISP|::|CADDDR| . #1#))
       (|COMMON-LISP-USER|::|IGNORE-SLOTS| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$UNIFY1|
       `(|COMMON-LISP|::|LET|
         ((|COMMON-LISP-USER|::|ALREADY-MATCHED|
           |COMMON-LISP-USER|::|*ALREADY-MATCHED*|)
          (|COMMON-LISP-USER|::|RESULT| |COMMON-LISP|::|NIL|))
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|*DIFF?*|
          |COMMON-LISP|::|NIL|)
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|*ALREADY-MATCHED*|
          (|COMMON-LISP|::|CONS| |COMMON-LISP|::|T| |COMMON-LISP|::|NIL|))
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|RESULT|
          (|COMMON-LISP-USER|::|OB$UNIFY2| ,|COMMON-LISP-USER|::|OB1|
           ,|COMMON-LISP-USER|::|OB2| ,|COMMON-LISP-USER|::|BINDINGS|
           ,|COMMON-LISP-USER|::|IGNORE-SLOTS|))
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|*ALREADY-MATCHED*|
          |COMMON-LISP-USER|::|ALREADY-MATCHED|)
         |COMMON-LISP-USER|::|RESULT|))))))
  '(|COMMON-LISP-USER|::|OB1| |COMMON-LISP-USER|::|OB2|
    |COMMON-LISP-USER|::|BINDINGS| |COMMON-LISP-USER|::|IGNORE-SLOTS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$DIFF1|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$DIFF1|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$DIFF1|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OB2| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|BINDINGS| (|COMMON-LISP|::|CADDDR| . #1#))
       (|COMMON-LISP-USER|::|IGNORE-SLOTS| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$DIFF1|
       `(|COMMON-LISP|::|LET|
         ((|COMMON-LISP-USER|::|ALREADY-MATCHED|
           |COMMON-LISP-USER|::|*ALREADY-MATCHED*|)
          (|COMMON-LISP-USER|::|RESULT| |COMMON-LISP|::|NIL|))
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|*DIFF?*|
          |COMMON-LISP|::|T|)
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|*ALREADY-MATCHED*|
          (|COMMON-LISP|::|CONS| |COMMON-LISP|::|T| |COMMON-LISP|::|NIL|))
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|RESULT|
          (|COMMON-LISP-USER|::|OB$UNIFY2| ,|COMMON-LISP-USER|::|OB1|
           ,|COMMON-LISP-USER|::|OB2| ,|COMMON-LISP-USER|::|BINDINGS|
           ,|COMMON-LISP-USER|::|IGNORE-SLOTS|))
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|*ALREADY-MATCHED*|
          |COMMON-LISP-USER|::|ALREADY-MATCHED|)
         |COMMON-LISP-USER|::|RESULT|))))))
  '(|COMMON-LISP-USER|::|OB1| |COMMON-LISP-USER|::|OB2|
    |COMMON-LISP-USER|::|BINDINGS| |COMMON-LISP-USER|::|IGNORE-SLOTS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$UNIFY|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$UNIFY|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$UNIFY|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OB2| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|BINDINGS| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$UNIFY|
       `(|COMMON-LISP-USER|::|OB$UNIFY1| ,|COMMON-LISP-USER|::|OB1|
         ,|COMMON-LISP-USER|::|OB2| ,|COMMON-LISP-USER|::|BINDINGS|
         |COMMON-LISP|::|NIL|))))))
  '(|COMMON-LISP-USER|::|OB1| |COMMON-LISP-USER|::|OB2|
    |COMMON-LISP-USER|::|BINDINGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$DIFF|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$DIFF|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$DIFF|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OB2| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|BINDINGS| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$DIFF|
       `(|COMMON-LISP-USER|::|OB$DIFF1| ,|COMMON-LISP-USER|::|OB1|
         ,|COMMON-LISP-USER|::|OB2| ,|COMMON-LISP-USER|::|BINDINGS|
         |COMMON-LISP|::|NIL|))))))
  '(|COMMON-LISP-USER|::|OB1| |COMMON-LISP-USER|::|OB2|
    |COMMON-LISP-USER|::|BINDINGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$UNIFY-CX|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$UNIFY-CX|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$UNIFY-CX|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 5.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OB2| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|BINDINGS| (|COMMON-LISP|::|CADDDR| . #1#))
       (|COMMON-LISP-USER|::|CONTEXT| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$UNIFY-CX|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|*UNIFY-CONTEXT*|
          ,|COMMON-LISP-USER|::|CONTEXT|)
         (|COMMON-LISP-USER|::|OB$UNIFY1| ,|COMMON-LISP-USER|::|OB1|
          ,|COMMON-LISP-USER|::|OB2| ,|COMMON-LISP-USER|::|BINDINGS|
          |COMMON-LISP|::|NIL|)))))))
  '(|COMMON-LISP-USER|::|OB1| |COMMON-LISP-USER|::|OB2|
    |COMMON-LISP-USER|::|BINDINGS| |COMMON-LISP-USER|::|CONTEXT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$UNIFY-CX1|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$UNIFY-CX1|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$UNIFY-CX1|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 6. 6.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|OB1|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|OB2| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|BINDINGS| (|COMMON-LISP|::|CADDDR| . #1#))
       (|COMMON-LISP-USER|::|IGNORE-SLOTS| (|COMMON-LISP|::|FIFTH| . #1#))
       (|COMMON-LISP-USER|::|CONTEXT|
        (|COMMON-LISP|::|CADR| (|COMMON-LISP|::|CDDDDR| . #1#))))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$UNIFY-CX1|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|*UNIFY-CONTEXT*|
          ,|COMMON-LISP-USER|::|CONTEXT|)
         (|COMMON-LISP-USER|::|OB$UNIFY1| ,|COMMON-LISP-USER|::|OB1|
          ,|COMMON-LISP-USER|::|OB2| ,|COMMON-LISP-USER|::|BINDINGS|
          ,|COMMON-LISP-USER|::|IGNORE-SLOTS|)))))))
  '(|COMMON-LISP-USER|::|OB1| |COMMON-LISP-USER|::|OB2|
    |COMMON-LISP-USER|::|BINDINGS| |COMMON-LISP-USER|::|IGNORE-SLOTS|
    |COMMON-LISP-USER|::|CONTEXT|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP-USER|::|OB$COMPARE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP-USER|::|OB$COMPARE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP-USER|::|OB$COMPARE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP-USER|::|SOURCE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP-USER|::|TARGET| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP-USER|::|IGNORE-SLOTS| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP-USER|::|OB$COMPARE|
       `(|COMMON-LISP|::|LET|
         ((|COMMON-LISP-USER|::|ALREADY-MATCHED|
           |COMMON-LISP-USER|::|*ALREADY-MATCHED*|)
          (|COMMON-LISP-USER|::|RESULT| |COMMON-LISP|::|NIL|))
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|*ALREADY-MATCHED*|
          (|COMMON-LISP|::|CONS| |COMMON-LISP|::|T| |COMMON-LISP|::|NIL|))
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|RESULT|
          (|COMMON-LISP-USER|::|OB$COMPARE1| ,|COMMON-LISP-USER|::|SOURCE|
           ,|COMMON-LISP-USER|::|TARGET| |COMMON-LISP-USER|::|*EMPTY-BD*|
           ,|COMMON-LISP-USER|::|IGNORE-SLOTS|
           (|COMMON-LISP|::|LAMBDA|
            (|COMMON-LISP-USER|::|SOURCE| |COMMON-LISP-USER|::|TARGET|)
            (|COMMON-LISP|::|COND|
             ((|COMMON-LISP|::|AND|
               (|COMMON-LISP-USER|::|TY?| |COMMON-LISP-USER|::|SOURCE|)
               (|COMMON-LISP-USER|::|TY?| |COMMON-LISP-USER|::|TARGET|))
              (|COMMON-LISP-USER|::|TY$LEAST-COMMON-SUPERTYPE|
               |COMMON-LISP-USER|::|SOURCE| |COMMON-LISP-USER|::|TARGET|))
             ((|COMMON-LISP|::|AND|
               (|COMMON-LISP-USER|::|OB$TY| |COMMON-LISP-USER|::|SOURCE|)
               (|COMMON-LISP-USER|::|OB$TY| |COMMON-LISP-USER|::|TARGET|))
              (|COMMON-LISP-USER|::|TY$LEAST-COMMON-SUPERTYPE|
               (|COMMON-LISP-USER|::|OB$TY| |COMMON-LISP-USER|::|SOURCE|)
               (|COMMON-LISP-USER|::|OB$TY| |COMMON-LISP-USER|::|TARGET|)))
             (|COMMON-LISP-USER|::|ELSE| |COMMON-LISP|::|NIL|)))))
         (|COMMON-LISP|::|SETQ| |COMMON-LISP-USER|::|*ALREADY-MATCHED*|
          |COMMON-LISP-USER|::|ALREADY-MATCHED|)
         |COMMON-LISP-USER|::|RESULT|))))))
  '(|COMMON-LISP-USER|::|SOURCE| |COMMON-LISP-USER|::|TARGET|
    |COMMON-LISP-USER|::|IGNORE-SLOTS|)))
